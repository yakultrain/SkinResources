<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UIResources;component/BaseResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="TreeViewItem" x:Key="ApplicationTreeViewItemContainerStyle">
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Expanded" AccelerationRatio="0.5">
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,-60,0,0"/>
                                <SplineThicknessKeyFrame KeySpline="0,1,1,1" KeyTime="00:00:00.3000000" Value="0,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsHost">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid1" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="20" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded"/>
                                <VisualState x:Name="Collapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter x:Name="PART_Header"
                				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                				ContentSource="Header" 
                				d:LayoutOverrides="Width" 
                				Height="Auto" Margin="1"/>
                        </Border>
                        <Grid Grid.Row="1" ClipToBounds="True" x:Name="grid" Margin="5,0,0,0">
                            <ItemsPresenter x:Name="ItemsHost" RenderTransformOrigin="0.5,0.5"
                				d:LayoutOverrides="GridBox" 
                				Height="Auto" VerticalAlignment="Stretch"
                				Margin="1" Visibility="Collapsed">
                                <ItemsPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </ItemsPresenter.RenderTransform>
                            </ItemsPresenter>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=HasChildren}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
						<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasFilter}" Value="True"/>
                                <Condition Binding="{Binding HasChildren}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasFilter}" Value="True"/>
                                <Condition Binding="{Binding HasChildren}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </MultiDataTrigger>  
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Expanded_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Expanded_BeginStoryboard" Storyboard="{StaticResource Expanded}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                        	<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource brush-border-alt}"/>
                        	<Setter Property="Background" TargetName="border" Value="{DynamicResource brush-background-alt}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="border">
                        	<Setter Property="Background" TargetName="border" Value="{DynamicResource brush-background-alt}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>       
    </Style>
    
    <Style  TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Background="{TemplateBinding Background}" 
										BorderBrush="{TemplateBinding BorderBrush}" 
					BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer CanContentScroll="True" x:Name="_tv_scrollviewer_">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>