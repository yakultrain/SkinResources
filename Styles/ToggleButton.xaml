<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/UIResources;component/BaseResources.xaml"/>
	</ResourceDictionary.MergedDictionaries>
			<Style  TargetType="{x:Type ToggleButton}">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="0,0,1,1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border CornerRadius="4" x:Name="ContentContainer" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver"/>
										<VisualState x:Name="Pressed"/>
										<VisualState x:Name="Disabled"/>
									</VisualStateGroup>
									<VisualStateGroup x:Name="CheckStates">
										<VisualState x:Name="Checked"/>
										<VisualState x:Name="Unchecked"/>
										<VisualState x:Name="Indeterminate"/>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ValidationStates">
										<VisualState x:Name="Valid"/>
										<VisualState x:Name="InvalidFocused"/>
										<VisualState x:Name="InvalidUnfocused"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Border>
							<ControlTemplate.Triggers>
	       					</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="BorderBrush" Value="{DynamicResource brush-border-alt}"/>
				<Setter Property="Background" Value="{DynamicResource brush-background-alt}"/>
			</Style>
</ResourceDictionary>